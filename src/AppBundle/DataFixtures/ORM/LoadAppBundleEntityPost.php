<?php

namespace AppBundle\DataFixtures\ORM;

use Doctrine\Common\DataFixtures\AbstractFixture;
use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use Doctrine\ORM\Mapping\ClassMetadata;
use AppBundle\Entity\Post;

/**
 * Generated by Webonaute\DoctrineFixtureGenerator.
 *
 */
class LoadAppBundleEntityPost extends AbstractFixture implements OrderedFixtureInterface
{

    /**
     * Set loading order.
     *
     * @return int
     */
    public function getOrder()
    {
        return 1;
    }


    /**
     * {@inheritDoc}
     */
    public function load(ObjectManager $manager)
    {
        $manager->getClassMetadata(Post::class)->setIdGeneratorType(ClassMetadata::GENERATOR_TYPE_NONE);
    
        $item1 = new Post();
        $this->addReference('_reference_AppBundleEntityPost1', $item1);
        $item1->setTitleEn("User can view blog posts");
        $item1->setTitleDe("Benutzer können Blog-Beiträge anzeigen");
        $item1->setSlug("user-can-view-blog-posts");
        $item1->setContentEn("<ul>
	<li>User should be able to view the list of blog posts once he&rsquo;ll login with email/password</li>
	<li>User should be able to open blog post page by clicking on any blog post title in the blog posts list</li>
	<li>User should be able to view the list of blog posts and blog post in another language (both <strong>DE </strong>and <strong>EN </strong>should be available to user)</li>
</ul>");
        $item1->setContentDe("<p>○ Benutzer sollten in der Lage sein, die Liste der Blog-Posts zu sehen, sobald er sich anmelden wird E-Mail Passwort ○ Benutzer sollten in der Lage sein, Blog-Post-Seite zu &ouml;ffnen, indem Sie auf einen beliebigen Blog-Titel in die Blog-Posts-Liste ○ Benutzer sollten in der Lage sein, die Liste der Blog-Posts und Blog-Post in einem anderen anzeigen Sprache (sowohl DE als auch EN sollte dem Benutzer zur Verf&uuml;gung stehen)</p>");
        $item1->setAuthorName("Alex");
        $item1->setAuthorEmail("alex@mail.ru");
        $item1->setPublishedAt(new \DateTime("2017-09-21 11:17:17"));

        $manager->persist($item1);

        $item2 = new Post();
        $this->addReference('_reference_AppBundleEntityPost2', $item2);
        $item2->setTitleEn("Manager can add new blog post");
        $item2->setTitleDe("Manager kann neue Blog-Post hinzufügen");
        $item2->setSlug("manager-can-add-new-blog-post");
        $item2->setContentEn("Manager should be able to create new blog post, by entering following fields for
every available language (EN + DE):
■ Title
■ Slug
■ Author name
■ Author email
■ Post text");
        $item2->setContentDe("Manager sollte in der Lage sein, neue Blog-Post zu erstellen, indem Sie folgende Felder eingeben
jede verfügbare Sprache (EN + DE):
■ Titel
■ Schnecke
■ Name des Autors
■ E-Mail des Autors
■ Text veröffentlichen");
        $item2->setAuthorName("Alex");
        $item2->setAuthorEmail("alex@mail.ru");
        $item2->setPublishedAt(new \DateTime("2017-09-21 11:17:17"));

        $manager->persist($item2);

    
        $manager->flush();
    }

}
